name: Build and Release Fonts in All Formats

on:
  push:
    tags:
      - v*

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      release_dir: ${{ steps.release_dir.outputs.value }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: './requirements.txt'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Create release directory
      run: mkdir -p release

  build-normal-liga:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run build script (hinted)
      run: |
        python build.py --archive --cn-both --normal --hinted --liga
        mv fonts/archive/* release/

    - name: Run build script (unhinted, cache)
      run: |
        python build.py --archive --cn-both --normal --no-hinted --liga --cache
        mv fonts/archive/* release/

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-normal-liga
        path: release

  build-normal-no-liga:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run build script (hinted)
      run: |
        python build.py --archive --cn-both --normal --hinted --no-liga
        mv fonts/archive/* release/

    - name: Run build script (unhinted, cache)
      run: |
        python build.py --archive --cn-both --normal --no-hinted --no-liga --cache
        mv fonts/archive/* release/

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-normal-no-liga
        path: release

  build-liga:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run build script (hinted)
      run: |
        python build.py --archive --cn-both --no-normal --hinted --liga
        mv fonts/archive/* release/

    - name: Run build script (unhinted, cache)
      run: |
        python build.py --archive --cn-both --no-normal --no-hinted --liga --cache
        mv fonts/archive/* release/

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-liga
        path: release

  build-no-liga:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run build script (hinted)
      run: |
        python build.py --archive --cn-both --no-normal --hinted --no-liga
        mv fonts/archive/* release/

    - name: Run build script (unhinted, cache)
      run: |
        python build.py --archive --cn-both --no-normal --no-hinted --no-liga --cache
        mv fonts/archive/* release/

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-no-liga
        path: release

  create-release:
    runs-on: ubuntu-latest
    needs: [setup, build-normal-liga, build-normal-no-liga, build-liga, build-no-liga]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: release-artifacts*
        path: release

    - name: Generate variable woff2
      run: |
        tree release
        ftcli converter ft2wf -out woff2/var -f woff2 fonts/variable
        git config user.name 'github-actions[bot]'
        git config user.email 'github-actions[bot]@users.noreply.github.com'
        set +e
        git add woff2
        git commit -m "Update woff2"
        git push

    - name: Upload final release artifacts
      run: |
        gh release create "${{ github.ref }}" release/*.* --generate-notes --notes-from-tag --draft