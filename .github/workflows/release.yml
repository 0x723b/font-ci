name: Build and Release Fonts in All Formats

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-normal-liga:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: './requirements.txt'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run build script (hinted)
      run: python build.py --archive --cn-both --normal --hinted --liga

    - name: Run build script (unhinted, cache)
      run: python build.py --archive --cn-both --normal --no-hinted --liga --cache

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-normal-liga
        path: fonts/archive/*

  build-normal-no-liga:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: './requirements.txt'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run build script (hinted)
      run: python build.py --archive --cn-both --normal --hinted --no-liga

    - name: Run build script (unhinted, cache)
      run: python build.py --archive --cn-both --normal --no-hinted --no-liga --cache

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-normal-no-liga
        path: fonts/archive/*

  build-liga:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: './requirements.txt'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run build script (hinted)
      run: python build.py --archive --cn-both --hinted --liga

    - name: Run build script (unhinted, cache)
      run: python build.py --archive --cn-both --no-hinted --liga --cache

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-liga
        path: fonts/archive/*

  build-no-liga:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: './requirements.txt'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run build script (hinted)
      run: python build.py --archive --cn-both --hinted --no-liga

    - name: Run build script (unhinted, cache)
      run: python build.py --archive --cn-both --no-hinted --no-liga --cache

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-no-liga
        path: fonts/archive/*

  create-release:
    runs-on: ubuntu-latest
    needs: [build-normal-liga, build-normal-no-liga, build-liga, build-no-liga]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download release artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: release-artifacts*
        path: release

    - name: Log artifacts tree
      run: tree release

    - name: Release artifacts
      run: |
        TAG="${{ github.ref }}"
        if [ -n "$TAG" ]; then
          TAG="vTmp$(date +%m)"
        fi
        gh release create "${{ github.ref }}" release/**/*.* --generate-notes --notes-from-tag --draft